- name: Show environment
  run: |
    xcodebuild -version
    xcrun simctl list devices
    xcrun simctl list runtimes

- name: Resolve simulator UDIDs (iPad + iPhone)
  id: sims
  shell: bash
  run: |
    set -euo pipefail
    # Pick the first available iPad
    IPAD_UDID="$(xcrun simctl list devices available | awk -F'[()]' '/iPad/{print $2; exit}')"
    # Pick the first available iPhone
    IPHONE_UDID="$(xcrun simctl list devices available | awk -F'[()]' '/iPhone/{print $2; exit}')"

    if [[ -z "${IPAD_UDID}" || -z "${IPHONE_UDID}" ]]; then
      echo "No suitable simulators found"; exit 1
    fi

    echo "ipad_udid=${IPAD_UDID}"   >> "$GITHUB_OUTPUT"
    echo "iphone_udid=${IPHONE_UDID}" >> "$GITHUB_OUTPUT"

- name: Build for testing (iPad)
  run: |
    set -euo pipefail
    xcodebuild build-for-testing \
      -project Sift.xcodeproj \
      -scheme Sift \
      -destination "id=${{ steps.sims.outputs.ipad_udid }}" \
      -enableCodeCoverage YES

- name: Test (iPad)
  run: |
    set -euo pipefail
    xcodebuild test-without-building \
      -project Sift.xcodeproj \
      -scheme Sift \
      -destination "id=${{ steps.sims.outputs.ipad_udid }}" \
      -enableCodeCoverage YES

- name: Test (iPhone)
  run: |
    set -euo pipefail
    xcodebuild test-without-building \
      -project Sift.xcodeproj \
      -scheme Sift \
      -destination "id=${{ steps.sims.outputs.iphone_udid }}" \
      -enableCodeCoverage YES
