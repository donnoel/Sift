name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Show Xcode version
        run: xcodebuild -version

      - name: List projects/schemes
        run: |
          find . -name "*.xcodeproj" -maxdepth 3
          for proj in $(find . -name "*.xcodeproj" -maxdepth 3); do
            echo "---- Schemes for $proj ----"
            xcodebuild -list -project "$proj" || true
          done

      - name: Build & Test (best-effort autodetect)
        run: |
          set -euo pipefail
          proj=$(find . -name "*.xcodeproj" -maxdepth 3 | head -n1)
          if [ -z "$proj" ]; then
            echo "No Xcode project found"; exit 1
          fi
          # Try to detect a scheme named 'Sift' first, else take the first found scheme
          scheme=""
          if xcodebuild -list -project "$proj" | grep -q "^\s*Sift$"; then
            scheme="Sift"
          else
            scheme=$(xcodebuild -list -project "$proj" | awk '/Schemes:/{flag=1;next}/:/ && flag{flag=0}flag' | head -n1 | xargs)
          fi
          echo "Using project: $proj"
          echo "Using scheme: $scheme"
          xcodebuild test -project "$proj" -scheme "$scheme" -destination 'platform=iOS Simulator,name=iPhone 16' -enableCodeCoverage YES | xcpretty
        shell: bash

      - name: Save DerivedData (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: DerivedData
          path: ~/Library/Developer/Xcode/DerivedData
          if-no-files-found: ignore

      - name: Save Test Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild-logs
          path: "*.log"
          if-no-files-found: ignore